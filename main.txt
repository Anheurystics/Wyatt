vert basic `
#version 130

in vec3 pos;
in vec3 col;

uniform mat4 model;
uniform mat4 view;
uniform mat4 proj;

out vec3 Color;

void main() {
    gl_Position = proj * view * model * vec4(pos, 1.0);
    Color = col;
}
`;

frag basic `#version 130

in vec3 Color;
out vec4 FragColor;

void main() {
    FragColor = vec4(Color, 1.0);
}
`;

func basic(input) {
    output.FinalPosition = proj * view * model * [input.pos, 1.0];
    Color = col;
}

func basic(input) {
    output.FinalColor = [input.Color, 1.0];
}

func init() {
    allocate a;

    white = [1, 1, 1];
    lgray = [0.8, 0.8, 0.8];
    dgray = [0.2, 0.2, 0.2];

    v0 = [-1,  1,  1];
    v1 = [ 1,  1,  1];
    v2 = [ 1, -1,  1];
    v3 = [-1, -1,  1];
    v4 = [ 1,  1, -1];
    v5 = [-1,  1, -1];
    v6 = [-1, -1, -1];
    v7 = [ 1, -1, -1];

    a.pos <- v1, v0, v3, v1, v3, v2;
    a.col <- white, white, white, white, white, white;

    a.pos <- v5, v4, v7, v5, v7, v6;
    a.col <- white, white, white, white, white, white;

    a.pos <- v4, v1, v2, v4, v2, v7;
    a.col <- lgray, lgray, lgray, lgray, lgray, lgray;

    a.pos <- v0, v5, v6, v0, v6, v3;
    a.col <- lgray, lgray, lgray, lgray, lgray, lgray;

    a.pos <- v4, v5, v0, v4, v0, v1;
    a.col <- dgray, dgray, dgray, dgray, dgray, dgray;

    a.pos <- v2, v3, v6, v2, v6, v7;
    a.col <- dgray, dgray, dgray, dgray, dgray, dgray;

    angle = 0;

    eye = [0,0,7];
    at = [0,0,0];
    up = [0,1,0];

    use basic;
    basic.view = mat4_lookat(eye, at, up);
    basic.proj = mat4_perspective(pi() * 0.25, 1.0, 0.1, 100.0);
}

func loop() {
    angle += 0.01 * pi();

    use basic;
    basic.model = mat4_rotation_x(angle) * mat4_rotation_y(angle);
    draw a;
}
